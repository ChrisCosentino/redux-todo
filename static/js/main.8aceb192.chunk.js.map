{"version":3,"sources":["components/AddTodo.js","actions/todo.js","actions/types.js","reducers/todo.js","reducers/index.js","store.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["connect","state","todo","addTodo","dispatch","type","payload","id","uuid","text","useState","formData","setFormData","onSubmit","e","preventDefault","target","reset","name","onChange","value","required","initialState","combineReducers","todos","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","completeTodo","onClick","handleComplete","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA2CeA,eANS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAMC,QAMhB,CAAEC,QC1CiB,SAACD,GAAD,OAAU,SAAAE,GAC7BA,EAAS,CACLC,KCLgB,WDMhBC,QAAS,CACLC,GAAIC,MACJC,KAAMP,QDmCHF,EArCC,SAAC,GAAe,IAAdG,EAAa,EAAbA,QAAa,EAEKO,mBAAS,CACrCR,KAAM,KAHiB,mBAEpBS,EAFoB,KAEVC,EAFU,KAMnBV,EAASS,EAATT,KAeR,OACI,0BAAMW,SAAU,SAAAC,GAAC,OATJ,SAAAA,GACbA,EAAEC,iBACFZ,EAAQD,GACRY,EAAEE,OAAOC,QAMYJ,CAASC,KAC1B,2BAAOT,KAAK,OAAOa,KAAK,OAAOC,SAAU,SAAAL,GAAC,OAfjC,SAAAA,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEE,OAAOE,KAAOJ,EAAEE,OAAOI,SAawBD,CAASL,IAAIO,UAAQ,IACnE,4BAAQhB,KAAK,UAAb,gB,+BG5BNiB,EAAe,GCCNC,4BAAgB,CAC3BC,MDAW,WAAuC,IAA9BvB,EAA6B,uDAArBqB,EAAcG,EAAO,uCACzCpB,EAAkBoB,EAAlBpB,KAAMC,EAAYmB,EAAZnB,QAEd,OAAOD,GACH,IDRgB,WCSZ,MAAM,GAAN,mBAAWJ,GAAX,CAAkBK,IACtB,IDTqB,gBCYjB,OAAOL,EAAMyB,QAAO,SAAAxB,GAAI,OAAIA,EAAKK,KAAOD,EAAQC,MACpD,QACI,OAAON,MEPb0B,EAAa,CAACC,KAQLC,EANDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCS5B3B,cACX,KACA,CAAEkC,aLXsB,SAAC3B,GAAD,OAAQ,SAAAH,GAChCA,EAAS,CACLC,KCdqB,gBDerBC,QAAS,CACLC,WKKGP,EAjBF,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,KAAMgC,EAAmB,EAAnBA,aAQlB,OACI,wBACIC,QAAS,SAAArB,GAAC,OARK,SAAAA,GACnBA,EAAEC,iBACFmB,EAAahC,EAAKK,IAMA6B,CAAetB,KAE5BZ,EAAKO,SCMHT,eAJS,SAAAC,GAAK,MAAK,CAC9BuB,MAAOvB,EAAMuB,SAGFxB,EAlBE,SAAC,GAAe,IAAbwB,EAAY,EAAZA,MAGhB,OACI,6BACI,4BACKA,EAAMa,KAAI,SAAAnC,GAAI,OACX,kBAAC,EAAD,CAAMoC,IAAKpC,EAAKK,GAAIL,KAAMA,YCO/BqC,EAZH,WACV,OACE,kBAAC,IAAD,CAAUV,MAAOA,GACf,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAHJ,kECLJW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8aceb192.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions/todo';\n\n\nconst AddTodo = ({addTodo}) => {\n\n    const [formData, setFormData] = useState({\n        todo: ''\n    });\n\n    const { todo } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    })\n\n    const onSubmit = e => {\n        e.preventDefault();\n        addTodo(todo);\n        e.target.reset();\n        // login(email, password);\n    }\n\n\n    return (\n        <form onSubmit={e => onSubmit(e)}>\n            <input type=\"text\" name=\"todo\" onChange={e => onChange(e)} required />\n            <button type=\"submit\">\n                Add Todo\n            </button>\n        </form>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        todo: state.todo\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { addTodo }\n)(AddTodo);","import { ADD_TODO, COMPLETE_TODO } from './types';\nimport uuid from 'react-uuid';\n\nexport const addTodo = (todo) => dispatch => {\n    dispatch({\n        type: ADD_TODO,\n        payload: {\n            id: uuid(),\n            text: todo\n        }\n    });\n};\n\nexport const completeTodo = (id) => dispatch => {\n    dispatch({\n        type: COMPLETE_TODO,\n        payload: {\n            id\n        }\n    });\n};","export const ADD_TODO = 'ADD_TODO';\nexport const COMPLETE_TODO = 'COMPLETE_TODO';","import { ADD_TODO, COMPLETE_TODO } from '../actions/types'\n\nconst initialState = [];\n\nexport default function(state = initialState, action){\n    const { type, payload } = action;\n\n    switch(type){\n        case ADD_TODO:\n            return [...state, payload];\n        case COMPLETE_TODO:\n            \n            // return state.filter(todo => console.log(todo.id));\n            return state.filter(todo => todo.id !== payload.id)\n        default: \n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport todos from './todo';\n\nexport default combineReducers({\n    todos\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { completeTodo } from '../actions/todo';\n\nconst Todo = ({ todo, completeTodo }) => {\n\n    const handleComplete = e => {\n        e.preventDefault();\n        completeTodo(todo.id);\n\n    }\n\n    return (\n        <li \n            onClick={e => handleComplete(e)}\n        >\n            {todo.text}\n        </li>\n    )\n}\n\nexport default connect(\n    null,\n    { completeTodo }\n)(Todo);","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos }) => {\n\n\n    return (\n        <div>\n            <ul>\n                {todos.map(todo => (\n                    <Todo key={todo.id} todo={todo}/>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: state.todos\n})\n\nexport default connect(\n    mapStateToProps\n)(TodoList);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport AddTodo from './components/AddTodo';\n\nimport store from './store';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        <AddTodo />\n        <TodoList />\n      </div>\n      **After adding a todo, click on it to remove it from the list\n    </Provider>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}